/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(1);

	var PubSub = __webpack_require__(2);

	PubSub.sub('pageview', function(initialPageview) {
	    if (initialPageview) {
	    } else {
	    }
	});

	var routes = {
	};

	PubSub.sub('pageview', function() {
	    for (var key in routes) {
	        var re = new RegExp(key, "i");
	        if (re.test(location.pathname)) {
	            return routes[key]();
	        }
	    }
	});


	__webpack_require__(4);

	document.registerElement('x-video', {
		prototype: Object.create(HTMLElement.prototype, {
			createdCallback: {
				value: function() {
					var url = this.getAttribute('url');
					var videoId = url.split('v=')[1];
					var embedUrl = '//youtube.com/embed/' + videoId;
					var iframe = '<iframe src="' + embedUrl + '" style="position: absolute; top:0; left: 0; right: 0; bottom: 0; width: 100%; border: none; height: 100%;" allowfullscreen></iframe>';
					
					var autoload = this.getAttribute('autoload') !== '0';

					if (autoload) {
						this.innerHTML = '<div style="position: relative; padding-top: 56.25%; padding-bottom: 30px; background-color: #000; text-align: center;">' + iframe + '</div>';
					} else {
						this.innerHTML = '<div style="position: relative; padding-top: 56.25%; padding-bottom: 30px; background-color: #000; text-align: center;"><div style="position: absolute; color: #fff; top: 0; right: 0; bottom: 0; left: 0; padding-top: 60px;">Klikk a lejátszáshoz!</div></div>';
						var el = this;

						this.onclick = function() {
							el.children[0].innerHTML = iframe;
						};
					}
				}
			}
		})
	});

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	var PubSub = __webpack_require__(2);

	var ic = __webpack_require__(3);

	ic.on('change', function(initialPageview) {
	    PubSub.pub('pageview', initialPageview);
	});

	setTimeout(function() {
	    ic.init('mousedown');
	}, 10);


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";function a(a){if("[object String]"!==Object.prototype.toString.call(a))throw new TypeError("Event is not a string.")}function b(a){if("function"!=typeof a)throw new TypeError("Handler is not a function")}var c={},d={};d.publish=d.pub=function(b){if(a(b),c[b])for(var d={event:b,args:Array.prototype.slice.call(arguments,1)},e=0,f=c[b].length;f>e;e++)c[b][e].apply(d,d.args)},d.subscribe=d.sub=function(d,e){a(d),b(e),(c[d]=c[d]||[]).push(e)},d.unsubscribe=d.unsub=function(){var d,e,f,g,h=Array.prototype.slice.call(arguments);if(h.length>=2){if(d=h[0],e=h[1],a(d),b(e),!c[d])return;for(f=0,g=c[d].length;g>f;f++)c[d][f]===e&&c[d].splice(f,1)}else{e=h[0],b(e);for(d in c)for(f=0,g=c[d].length;g>f;f++)c[d][f]===e&&c[d].splice(f,1)}},true?!(__WEBPACK_AMD_DEFINE_RESULT__ = function(){return d}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):"object"==typeof module&&module.exports?module.exports=d:window.PubSub=d}();

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	/* InstantClick 3.0.1 | (C) 2014 Alexandre Dieulot | http://instantclick.io/license.html */

	module.exports = function(document, location) {
	  // Internal variables
	  var $ua = navigator.userAgent,
	      $hasTouch = 'createTouch' in document,
	      $currentLocationWithoutHash,
	      $urlToPreload,
	      $preloadTimer,

	  // Preloading-related variables
	      $history = {},
	      $xhr,
	      $url = false,
	      $title = false,
	      $mustRedirect = false,
	      $body = false,
	      $timing = {},
	      $isPreloading = false,
	      $isWaitingForCompletion = false,
	      $trackedAssets = [],

	  // Variables defined by public functions
	      $useWhitelist,
	      $preloadOnMousedown,
	      $delayBeforePreload,
	      $eventsCallbacks = {
	        fetch: [],
	        receive: [],
	        wait: [],
	        change: []
	      }


	  ////////// HELPERS //////////


	  function removeHash(url) {
	    var index = url.indexOf('#')
	    if (index < 0) {
	      return url
	    }
	    return url.substr(0, index)
	  }

	  function getLinkTarget(target) {
	    while (target.nodeName != 'A') {
	      target = target.parentNode
	    }
	    return target
	  }

	  function isBlacklisted(elem) {
	    do {
	      if (!elem.hasAttribute) { // Parent of <html>
	        break
	      }
	      if (elem.hasAttribute('data-instant')) {
	        return false
	      }
	      if (elem.hasAttribute('data-no-instant')) {
	        return true
	      }
	    }
	    while (elem = elem.parentNode);
	    return false
	  }

	  function isWhitelisted(elem) {
	    do {
	      if (!elem.hasAttribute) { // Parent of <html>
	        break
	      }
	      if (elem.hasAttribute('data-no-instant')) {
	        return false
	      }
	      if (elem.hasAttribute('data-instant')) {
	        return true
	      }
	    }
	    while (elem = elem.parentNode);
	    return false
	  }

	  function triggerPageEvent(eventType, arg1) {
	    for (var i = 0; i < $eventsCallbacks[eventType].length; i++) {
	      $eventsCallbacks[eventType][i](arg1)
	    }

	    /* The `change` event takes one boolean argument: "isInitialLoad" */
	  }

	  function changePage(title, body, newUrl, scrollY) {
	    document.title = title

	    document.documentElement.replaceChild(body, document.body)
	    /* We cannot just use `document.body = doc.body`, it causes Safari (tested
	       5.1, 6.0 and Mobile 7.0) to execute script tags directly.
	    */

	    if (newUrl) {
	      history.pushState(null, null, newUrl)

	      var hashIndex = newUrl.indexOf('#'),
	          hashElem = hashIndex > -1
	                     && document.getElementById(newUrl.substr(hashIndex + 1)),
	          offset = 0

	      if (hashElem) {
	        while (hashElem.offsetParent) {
	          offset += hashElem.offsetTop

	          hashElem = hashElem.offsetParent
	        }
	      }
	      scrollTo(0, offset)

	      $currentLocationWithoutHash = removeHash(newUrl)
	    }
	    else {
	      scrollTo(0, scrollY)
	    }
	    instantanize()
	    bar.done()
	    triggerPageEvent('change', false)
	  }

	  function setPreloadingAsHalted() {
	    $isPreloading = false
	    $isWaitingForCompletion = false
	  }


	  ////////// EVENT HANDLERS //////////


	  function mousedown(e) {
	    preload(getLinkTarget(e.target).href)
	  }

	  function mouseover(e) {
	    var a = getLinkTarget(e.target)
	    a.addEventListener('mouseout', mouseout)

	    if (!$delayBeforePreload) {
	      preload(a.href)
	    }
	    else {
	      $urlToPreload = a.href
	      $preloadTimer = setTimeout(preload, $delayBeforePreload)
	    }
	  }

	  function touchstart(e) {
	    var a = getLinkTarget(e.target)
	    if ($preloadOnMousedown) {
	      a.removeEventListener('mousedown', mousedown)
	    }
	    else {
	      a.removeEventListener('mouseover', mouseover)
	    }
	    preload(a.href)
	  }

	  function click(e) {
	    if (e.which > 1 || e.metaKey || e.ctrlKey) { // Opening in new tab
	      return
	    }
	    e.preventDefault()
	    display(getLinkTarget(e.target).href)
	  }

	  function mouseout() {
	    if ($preloadTimer) {
	      clearTimeout($preloadTimer)
	      $preloadTimer = false
	      return
	    }

	    if (!$isPreloading || $isWaitingForCompletion) {
	      return
	    }
	    $xhr.abort()
	    setPreloadingAsHalted()
	  }

	  function readystatechange() {
	    if ($xhr.readyState < 4) {
	      return
	    }
	    if ($xhr.status == 0) {
	      /* Request aborted */
	      return
	    }

	    $timing.ready = +new Date - $timing.start
	    triggerPageEvent('receive')

	    if ($xhr.getResponseHeader('Content-Type').match(/\/(x|ht|xht)ml/)) {
	      var doc = document.implementation.createHTMLDocument('')
	      doc.documentElement.innerHTML = $xhr.responseText
	      $title = doc.title
	      $body = doc.body
	      var urlWithoutHash = removeHash($url)
	      $history[urlWithoutHash] = {
	        body: $body,
	        title: $title,
	        scrollY: urlWithoutHash in $history ? $history[urlWithoutHash].scrollY : 0
	      }

	      var elems = doc.head.children,
	          found = 0,
	          elem,
	          data

	      for (var i = elems.length - 1; i >= 0; i--) {
	        elem = elems[i]
	        if (elem.hasAttribute('data-instant-track')) {
	          data = elem.getAttribute('href') || elem.getAttribute('src') || elem.innerHTML
	          for (var j = $trackedAssets.length - 1; j >= 0; j--) {
	            if ($trackedAssets[j] == data) {
	              found++
	            }
	          }
	        }
	      }
	      if (found != $trackedAssets.length) {
	        $mustRedirect = true // Assets have changed
	      }
	    }
	    else {
	      $mustRedirect = true // Not an HTML document
	    }

	    if ($isWaitingForCompletion) {
	      $isWaitingForCompletion = false
	      display($url)
	    }
	  }


	  ////////// MAIN FUNCTIONS //////////


	  function instantanize(isInitializing) {
	    var as = document.getElementsByTagName('a'),
	        a,
	        domain = location.protocol + '//' + location.host

	    for (var i = as.length - 1; i >= 0; i--) {
	      a = as[i]
	      if (a.target // target="_blank" etc.
	          || a.hasAttribute('download')
	          || a.href.indexOf(domain + '/') != 0 // Another domain, or no href attribute
	          || (a.href.indexOf('#') > -1
	              && removeHash(a.href) == $currentLocationWithoutHash) // Anchor
	          || ($useWhitelist
	              ? !isWhitelisted(a)
	              : isBlacklisted(a))
	         ) {
	        continue
	      }
	      a.addEventListener('touchstart', touchstart)
	      if ($preloadOnMousedown) {
	        a.addEventListener('mousedown', mousedown)
	      }
	      else {
	        a.addEventListener('mouseover', mouseover)
	      }
	      a.addEventListener('click', click)
	    }
	    if (!isInitializing) {
	      var scripts = document.body.getElementsByTagName('script'),
	          script,
	          copy,
	          parentNode,
	          nextSibling

	      for (i = 0, j = scripts.length; i < j; i++) {
	        script = scripts[i]
	        if (script.hasAttribute('data-no-instant')) {
	          continue
	        }
	        copy = document.createElement('script')
	        if (script.src) {
	          copy.src = script.src
	        }
	        if (script.innerHTML) {
	          copy.innerHTML = script.innerHTML
	        }
	        parentNode = script.parentNode
	        nextSibling = script.nextSibling
	        parentNode.removeChild(script)
	        parentNode.insertBefore(copy, nextSibling)
	      }
	    }
	  }

	  function preload(url) {
	    if (!$preloadOnMousedown
	        && 'display' in $timing
	        && +new Date - ($timing.start + $timing.display) < 100) {
	      /* After a page is displayed, if the user's cursor happens to be above
	         a link a mouseover event will be in most browsers triggered
	         automatically, and in other browsers it will be triggered when the
	         user moves his mouse by 1px.

	         Here are the behavior I noticed, all on Windows:
	         - Safari 5.1: auto-triggers after 0 ms
	         - IE 11: auto-triggers after 30-80 ms (depends on page's size?)
	         - Firefox: auto-triggers after 10 ms
	         - Opera 18: auto-triggers after 10 ms

	         - Chrome: triggers when cursor moved
	         - Opera 12.16: triggers when cursor moved

	         To remedy to this, we do not start preloading if last display
	         occurred less than 100 ms ago. If they happen to click on the link,
	         they will be redirected.
	      */

	      return
	    }
	    if ($preloadTimer) {
	      clearTimeout($preloadTimer)
	      $preloadTimer = false
	    }

	    if (!url) {
	      url = $urlToPreload
	    }

	    if ($isPreloading && (url == $url || $isWaitingForCompletion)) {
	      return
	    }
	    $isPreloading = true
	    $isWaitingForCompletion = false

	    $url = url
	    $body = false
	    $mustRedirect = false
	    $timing = {
	      start: +new Date
	    }
	    triggerPageEvent('fetch')
	    $xhr.open('GET', url)
	    $xhr.send()
	  }

	  function display(url) {
	    if (!('display' in $timing)) {
	      $timing.display = +new Date - $timing.start
	    }
	    if ($preloadTimer) {
	      /* Happens when there’s a delay before preloading and that delay
	         hasn't expired (preloading didn't kick in).
	      */

	      if ($url && $url != url) {
	        /* Happens when the user clicks on a link before preloading
	           kicks in while another link is already preloading.
	        */

	        location.href = url
	        return
	      }
	      preload(url)
	      bar.start(0, true)
	      triggerPageEvent('wait')
	      $isWaitingForCompletion = true
	      return
	    }
	    if (!$isPreloading || $isWaitingForCompletion) {
	      /* If the page isn't preloaded, it likely means the user has focused
	         on a link (with his Tab key) and then pressed Return, which
	         triggered a click.
	         Because very few people do this, it isn't worth handling this case
	         and preloading on focus (also, focusing on a link doesn't mean it's
	         likely that you'll "click" on it), so we just redirect them when
	         they "click".
	         It could also mean the user hovered over a link less than 100 ms
	         after a page display, thus we didn't start the preload (see
	         comments in `preload()` for the rationale behind this.)

	         If the page is waiting for completion, the user clicked twice while
	         the page was preloading. Either on the same link or on another
	         link. If it's the same link something might have gone wrong (or he
	         could have double clicked), so we send him to the page the old way.
	         If it's another link, it hasn't been preloaded, so we redirect the
	         user the old way.
	      */

	      location.href = url
	      return
	    }
	    if ($mustRedirect) {
	      location.href = $url
	      return
	    }
	    if (!$body) {
	      bar.start(0, true)
	      triggerPageEvent('wait')
	      $isWaitingForCompletion = true
	      return
	    }
	    $history[$currentLocationWithoutHash].scrollY = pageYOffset
	    setPreloadingAsHalted()
	    changePage($title, $body, $url)
	  }


	  ////////// PROGRESS BAR FUNCTIONS //////////


	  var bar = function() {
	    var $barContainer,
	        $barElement,
	        $barTransformProperty,
	        $barProgress,
	        $barTimer

	    function init() {
	      $barContainer = document.createElement('div')
	      $barContainer.id = 'instantclick'
	      $barElement = document.createElement('div')
	      $barElement.id = 'instantclick-bar'
	      $barElement.className = 'instantclick-bar'
	      $barContainer.appendChild($barElement)

	      var vendors = ['Webkit', 'Moz', 'O']

	      $barTransformProperty = 'transform'
	      if (!($barTransformProperty in $barElement.style)) {
	        for (var i = 0; i < 3; i++) {
	          if (vendors[i] + 'Transform' in $barElement.style) {
	            $barTransformProperty = vendors[i] + 'Transform'
	          }
	        }
	      }

	      var transitionProperty = 'transition'
	      if (!(transitionProperty in $barElement.style)) {
	        for (var i = 0; i < 3; i++) {
	          if (vendors[i] + 'Transition' in $barElement.style) {
	            transitionProperty = '-' + vendors[i].toLowerCase() + '-' + transitionProperty
	          }
	        }
	      }

	      var style = document.createElement('style')
	      style.innerHTML = '#instantclick{position:' + ($hasTouch ? 'absolute' : 'fixed') + ';top:0;left:0;width:100%;pointer-events:none;z-index:2147483647;' + transitionProperty + ':opacity .25s .1s}'
	        + '.instantclick-bar{background:#29d;width:100%;margin-left:-100%;height:2px;' + transitionProperty + ':all .25s}'
	      /* We set the bar's background in `.instantclick-bar` so that it can be
	         overriden in CSS with `#instantclick-bar`, as IDs have higher priority.
	      */
	      document.head.appendChild(style)

	      if ($hasTouch) {
	        updatePositionAndScale()
	        addEventListener('resize', updatePositionAndScale)
	        addEventListener('scroll', updatePositionAndScale)
	      }

	    }

	    function start(at, jump) {
	      $barProgress = at
	      if (document.getElementById($barContainer.id)) {
	        document.body.removeChild($barContainer)
	      }
	      $barContainer.style.opacity = '1'
	      if (document.getElementById($barContainer.id)) {
	        document.body.removeChild($barContainer)
	        /* So there's no CSS animation if already done once and it goes from 1 to 0 */
	      }
	      update()
	      if (jump) {
	        setTimeout(jumpStart, 0)
	        /* Must be done in a timer, otherwise the CSS animation doesn't happen. */
	      }
	      clearTimeout($barTimer)
	      $barTimer = setTimeout(inc, 500)
	    }

	    function jumpStart() {
	      $barProgress = 10
	      update()
	    }

	    function inc() {
	      $barProgress += 1 + (Math.random() * 2)
	      if ($barProgress >= 98) {
	        $barProgress = 98
	      }
	      else {
	        $barTimer = setTimeout(inc, 500)
	      }
	      update()
	    }

	    function update() {
	      $barElement.style[$barTransformProperty] = 'translate(' + $barProgress + '%)'
	      if (!document.getElementById($barContainer.id)) {
	        document.body.appendChild($barContainer)
	      }
	    }

	    function done() {
	      if (document.getElementById($barContainer.id)) {
	        clearTimeout($barTimer)
	        $barProgress = 100
	        update()
	        $barContainer.style.opacity = '0'
	        /* If you're debugging, setting this to 0.5 is handy. */
	        return
	      }

	      /* The bar container hasn't been appended: It's a new page. */
	      start($barProgress == 100 ? 0 : $barProgress)
	      /* $barProgress is 100 on popstate, usually. */
	      setTimeout(done, 0)
	      /* Must be done in a timer, otherwise the CSS animation doesn't happen. */
	    }

	    function updatePositionAndScale() {
	      /* Adapted from code by Sam Stephenson and Mislav Marohnić
	         http://signalvnoise.com/posts/2407
	      */

	      $barContainer.style.left = pageXOffset + 'px'
	      $barContainer.style.width = innerWidth + 'px'
	      $barContainer.style.top = pageYOffset + 'px'

	      var landscape = 'orientation' in window && Math.abs(orientation) == 90,
	          scaleY = innerWidth / screen[landscape ? 'height' : 'width'] * 2
	      /* We multiply the size by 2 because the progress bar is harder
	         to notice on a mobile device.
	      */
	      $barContainer.style[$barTransformProperty] = 'scaleY(' + scaleY  + ')'
	    }

	    return {
	      init: init,
	      start: start,
	      done: done
	    }
	  }()


	  ////////// PUBLIC VARIABLE AND FUNCTIONS //////////

	  var supported = 'pushState' in history
	                  && (!$ua.match('Android') || $ua.match('Chrome/'))
	                  && location.protocol != "file:"

	  /* The state of Android's AOSP browsers:

	     2.3.7: pushState appears to work correctly, but
	            `doc.documentElement.innerHTML = body` is buggy.
	            See details here: http://stackoverflow.com/q/21918564
	            Note an issue anymore, but it may fail where 3.0 do, this needs
	            testing again.

	     3.0:   pushState appears to work correctly (though the URL bar is only
	            updated on focus), but
	            `document.documentElement.replaceChild(doc.body, document.body)`
	        throws DOMException: WRONG_DOCUMENT_ERR.

	     4.0.2: Doesn't support pushState.

	     4.0.4,
	     4.1.1,
	     4.2,
	     4.3:   pushState is here, but it doesn't update the URL bar.
	            (Great logic there.)

	     4.4:   Works correctly. Claims to be 'Chrome/30.0.0.0'.

	     All androids tested with Android SDK's Emulator.
	     Version numbers are from the browser's user agent.

	     Because of this mess, the only whitelisted browser on Android is Chrome.
	  */

	  function init() {
	    if ($currentLocationWithoutHash) {
	      /* Already initialized */
	      return
	    }
	    if (!supported) {
	      triggerPageEvent('change', true)
	      return
	    }
	    for (var i = arguments.length - 1; i >= 0; i--) {
	      var arg = arguments[i]
	      if (arg === true) {
	        $useWhitelist = true
	      }
	      else if (arg == 'mousedown') {
	        $preloadOnMousedown = true
	      }
	      else if (typeof arg == 'number') {
	        $delayBeforePreload = arg
	      }
	    }
	    $currentLocationWithoutHash = removeHash(location.href)
	    $history[$currentLocationWithoutHash] = {
	      body: document.body,
	      title: document.title,
	      scrollY: pageYOffset
	    }

	    var elems = document.head.children,
	        elem,
	        data
	    for (var i = elems.length - 1; i >= 0; i--) {
	      elem = elems[i]
	      if (elem.hasAttribute('data-instant-track')) {
	        data = elem.getAttribute('href') || elem.getAttribute('src') || elem.innerHTML
	        /* We can't use just `elem.href` and `elem.src` because we can't
	           retrieve `href`s and `src`s from the Ajax response.
	        */
	        $trackedAssets.push(data)
	      }
	    }

	    $xhr = new XMLHttpRequest()
	    $xhr.addEventListener('readystatechange', readystatechange)

	    instantanize(true)

	    bar.init()

	    triggerPageEvent('change', true)

	    addEventListener('popstate', function() {
	      var loc = removeHash(location.href)
	      if (loc == $currentLocationWithoutHash) {
	        return
	      }

	      if (!(loc in $history)) {
	        location.href = location.href
	        /* Reloads the page while using cache for scripts, styles and images,
	           unlike `location.reload()` */
	        return
	      }

	      $history[$currentLocationWithoutHash].scrollY = pageYOffset
	      $currentLocationWithoutHash = loc
	      changePage($history[loc].title, $history[loc].body, false, $history[loc].scrollY)
	    })
	  }

	  function on(eventType, callback) {
	    $eventsCallbacks[eventType].push(callback)
	  }


	  /* The debug function isn't included by default to reduce file size.
	     To enable it, add a slash at the beginning of the comment englobing
	     the debug function, and uncomment "debug: debug," in the return
	     statement below the function. */

	  /*
	  function debug() {
	    return {
	      currentLocationWithoutHash: $currentLocationWithoutHash,
	      history: $history,
	      xhr: $xhr,
	      url: $url,
	      title: $title,
	      mustRedirect: $mustRedirect,
	      body: $body,
	      timing: $timing,
	      isPreloading: $isPreloading,
	      isWaitingForCompletion: $isWaitingForCompletion
	    }
	  }
	  //*/


	  ////////////////////


	  return {
	    // debug: debug,
	    supported: supported,
	    init: init,
	    on: on
	  }

	}(document, location);


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/*! (C) WebReflection Mit Style License */
	(function(e,t,n,r){"use strict";function z(e,t){for(var n=0,r=e.length;n<r;n++)Y(e[n],t)}function W(e){for(var t=0,n=e.length,r;t<n;t++)r=e[t],U(r,p[V(r)])}function X(e){return function(t){b.call(A,t)&&(Y(t,e),z(t.querySelectorAll(d),e))}}function V(e){var t=e.getAttribute("is"),n=e.nodeName,r=m.call(h,t?f+t.toUpperCase():a+n);return t&&-1<r&&!$(n,t)?-1:r}function $(e,t){return-1<d.indexOf(e+'[is="'+t+'"]')}function J(e){var t=e.currentTarget,n=e.attrChange,r=e.prevValue,i=e.newValue;t.attributeChangedCallback&&e.attrName!=="style"&&t.attributeChangedCallback(e.attrName,n===e.ADDITION?null:r,n===e.REMOVAL?null:i)}function K(e){var t=X(e);return function(e){t(e.target)}}function Q(e,t){var n=this;M.call(n,e,t),j.call(n,{target:n})}function G(e,t){k(e,t),q?q.observe(e,D):(B&&(e.setAttribute=Q,e[i]=I(e),e.addEventListener(u,j)),e.addEventListener(o,J)),e.createdCallback&&(e.created=!0,e.createdCallback(),e.created=!1)}function Y(e,t){var n,r=V(e),i="attached",s="detached";-1<r&&(R(e,p[r]),r=0,t===i&&!e[i]?(e[s]=!1,e[i]=!0,r=1):t===s&&!e[s]&&(e[i]=!1,e[s]=!0,r=1),r&&(n=e[t+"Callback"])&&n.call(e))}if(r in t)return;var i="__"+r+(Math.random()*1e5>>0),s="extends",o="DOMAttrModified",u="DOMSubtreeModified",a="<",f="=",l=/^[A-Z][A-Z0-9]*(?:-[A-Z0-9]+)+$/,c=["ANNOTATION-XML","COLOR-PROFILE","FONT-FACE","FONT-FACE-SRC","FONT-FACE-URI","FONT-FACE-FORMAT","FONT-FACE-NAME","MISSING-GLYPH"],h=[],p=[],d="",v=t.documentElement,m=h.indexOf||function(e){for(var t=this.length;t--&&this[t]!==e;);return t},g=n.prototype,y=g.hasOwnProperty,b=g.isPrototypeOf,w=n.defineProperty,E=n.getOwnPropertyDescriptor,S=n.getOwnPropertyNames,x=n.getPrototypeOf,T=n.setPrototypeOf,N=!!n.__proto__,C=n.create||function Z(e){return e?(Z.prototype=e,new Z):this},k=T||(N?function(e,t){return e.__proto__=t,e}:S&&E?function(){function e(e,t){for(var n,r=S(t),i=0,s=r.length;i<s;i++)n=r[i],y.call(e,n)||w(e,n,E(t,n))}return function(t,n){do e(t,n);while(n=x(n));return t}}():function(e,t){for(var n in t)e[n]=t[n];return e}),L=e.MutationObserver||e.WebKitMutationObserver,A=(e.HTMLElement||e.Element||e.Node).prototype,O=A.cloneNode,M=A.setAttribute,_=t.createElement,D=L&&{attributes:!0,characterData:!0,attributeOldValue:!0},P=L||function(e){B=!1,v.removeEventListener(o,P)},H=!1,B=!0,j,F,I,q,R,U;T||N?(R=function(e,t){b.call(t,e)||G(e,t)},U=G):(R=function(e,t){e[i]||(e[i]=n(!0),G(e,t))},U=R),L||(v.addEventListener(o,P),v.setAttribute(i,1),v.removeAttribute(i),B&&(j=function(e){var t=this,n,r,s;if(t===e.target){n=t[i],t[i]=r=I(t);for(s in r){if(!(s in n))return F(0,t,s,n[s],r[s],"ADDITION");if(r[s]!==n[s])return F(1,t,s,n[s],r[s],"MODIFICATION")}for(s in n)if(!(s in r))return F(2,t,s,n[s],r[s],"REMOVAL")}},F=function(e,t,n,r,i,s){var o={attrChange:e,currentTarget:t,attrName:n,prevValue:r,newValue:i};o[s]=e,J(o)},I=function(e){for(var t,n,r={},i=e.attributes,s=0,o=i.length;s<o;s++)t=i[s],n=t.name,n!=="setAttribute"&&(r[n]=t.value);return r})),t[r]=function(n,r){w=n.toUpperCase(),H||(H=!0,L?(q=function(e,t){function n(e,t){for(var n=0,r=e.length;n<r;t(e[n++]));}return new L(function(r){for(var i,s,o=0,u=r.length;o<u;o++)i=r[o],i.type==="childList"?(n(i.addedNodes,e),n(i.removedNodes,t)):(s=i.target,s.attributeChangedCallback&&i.attributeName!=="style"&&s.attributeChangedCallback(i.attributeName,i.oldValue,s.getAttribute(i.attributeName)))})}(X("attached"),X("detached")),q.observe(t,{childList:!0,subtree:!0})):(t.addEventListener("DOMNodeInserted",K("attached")),t.addEventListener("DOMNodeRemoved",K("detached"))),t.addEventListener("readystatechange",function(e){z(t.querySelectorAll(d),"attached")}),t.createElement=function(e,n){var r=_.apply(t,arguments),i=m.call(h,(n?f:a)+(n||e).toUpperCase()),s=-1<i;return n&&(r.setAttribute("is",n=n.toLowerCase()),s&&(s=$(e.toUpperCase(),n))),s&&U(r,p[i]),r},A.cloneNode=function(e){var t=O.call(this,!!e),n=V(t);return-1<n&&U(t,p[n]),e&&W(t.querySelectorAll(d)),t});if(-2<m.call(h,f+w)+m.call(h,a+w))throw new Error("A "+n+" type is already registered");if(!l.test(w)||-1<m.call(c,w))throw new Error("The type "+n+" is invalid");var i=function(){return t.createElement(v,u&&w)},o=r||g,u=y.call(o,s),v=u?r[s].toUpperCase():w,b=h.push((u?f:a)+w)-1,w;return d=d.concat(d.length?",":"",u?v+'[is="'+n.toLowerCase()+'"]':v),i.prototype=p[b]=y.call(o,"prototype")?o.prototype:C(A),z(t.querySelectorAll(d),"attached"),i}})(window,document,Object,"registerElement");

/***/ }
/******/ ])